name: Clean up Azure Infrastructure

on:
  workflow_dispatch:  # Solo se ejecutar√° a demanda. Si el recurso no existe, no har√° nada.


jobs:
  job-cleanup-infra-azure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.INFRA_AZURE_SERVICE_PRINCIPAL_INFO }}

      - name: Drop FrontEnd Container App if exists
        run: |
          if az containerapp show \
              --name ${{ vars.INFRA_AZURE_CONTAINERAPP_FRONTEND_NAME }} \
              --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} &>/dev/null; then
            echo "üóëÔ∏è Dropping Container App ${{ vars.INFRA_AZURE_CONTAINERAPP_FRONTEND_NAME }} ..."
            az containerapp delete \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                --name ${{ vars.INFRA_AZURE_CONTAINERAPP_FRONTEND_NAME }} \
                --yes
          else
            echo "‚ö†Ô∏è Container App ${{ vars.INFRA_AZURE_CONTAINERAPP_FRONTEND_NAME }} does not exist. Skipping ..."
          fi

      - name: Drop API Java Container App if exists
        run: |
          if az containerapp show \
                --name ${{ vars.INFRA_AZURE_CONTAINERAPP_APIJAVA_NAME }} \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping Container App ${{ vars.INFRA_AZURE_CONTAINERAPP_APIJAVA_NAME }} ..."
              az containerapp delete \
                  --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --name ${{ vars.INFRA_AZURE_CONTAINERAPP_APIJAVA_NAME }} \
                  --yes
          else
              echo "‚ö†Ô∏è Container App ${{ vars.INFRA_AZURE_CONTAINERAPP_APIJAVA_NAME }} does not exist. Skipping ..."
          fi

      - name: Drop Container App Environment if exists
        run: |
          if az containerapp env show \
                --name ${{ vars.INFRA_AZURE_CONTAINERAPPENVIRONMENT_NAME }} \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping Container App Environment ${{ vars.INFRA_AZURE_CONTAINERAPPENVIRONMENT_NAME }} ..."
              az containerapp env delete \
                  --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --name ${{ vars.INFRA_AZURE_CONTAINERAPPENVIRONMENT_NAME }} \
                  --yes
          else
              echo "‚ö†Ô∏è Container App Environment ${{ vars.INFRA_AZURE_CONTAINERAPPENVIRONMENT_NAME }} does not exist. Skipping ..."
          fi

      - name: Wait for Container App Environment deletion
        run: |
          export SLEEP_IN_SECONDS=15
          export TOTAL_WAIT_TIME_IN_SECONDS=900  # 15 minutes
          export MAX_RETRIES=$((TOTAL_WAIT_TIME_IN_SECONDS / SLEEP_IN_SECONDS))

          echo "‚è≥ Waiting for Container App Environment ${{ vars.INFRA_AZURE_CONTAINERAPPENVIRONMENT_NAME }} deletion for $TOTAL_WAIT_TIME_IN_SECONDS seconds ..."

          for i in $(seq 1 $MAX_RETRIES); do
            STATUS=$(az containerapp env show \
              --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
              --name ${{ vars.INFRA_AZURE_CONTAINERAPPENVIRONMENT_NAME }} \
              -o tsv 2>/dev/null || echo "NotFound")

            echo "$(TZ="America/Lima" date +"%Y-%m-%d %H:%M:%S") Status [$(printf "%03d" "$i") of $(printf "%03d" "$MAX_RETRIES")]: $STATUS"

            if [ "$STATUS" = "NotFound" ]; then
              echo "üóëÔ∏è Container App Environment has been deleted"
              break
            fi

            if [ "$i" -eq "$MAX_RETRIES" ]; then
              echo "‚ùå Timeout waiting for Container App Environment deletion"
              exit 1
            fi

            sleep "$SLEEP_IN_SECONDS"
          done

      - name: Drop Log Analytics if exists
        run: |
          if az monitor log-analytics workspace show \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                --workspace-name ${{ vars.INFRA_AZURE_LOGANALYTICSWORKSPACE_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping Log Analytics Workspace ${{ vars.INFRA_AZURE_LOGANALYTICSWORKSPACE_NAME }} ..."
              az monitor log-analytics workspace delete \
                  --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --workspace-name ${{ vars.INFRA_AZURE_LOGANALYTICSWORKSPACE_NAME }} \
                  --force yes \
                  --yes
          else
              echo "‚ö†Ô∏è Log Analytics Workspace ${{ vars.INFRA_AZURE_LOGANALYTICSWORKSPACE_NAME }} does not exist. Skipping ..."
          fi

      - name: Drop Azure Container Registry if exists
        run: |
          if az acr show \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                --name ${{ vars.INFRA_AZURE_ACR_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping Azure Container Registry ${{ vars.INFRA_AZURE_ACR_NAME }} ..."
              az acr delete \
                  --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --name ${{ vars.INFRA_AZURE_ACR_NAME }} \
                  --yes
          else
              echo "‚ö†Ô∏è Azure Container Registry ${{ vars.INFRA_AZURE_ACR_NAME }} does not exist. Skipping ..."
          fi

      - name: Drop SQL Database if exists
        run: |
          if az sql db show \
                --name ${{ vars.INFRA_AZURE_SQLSERVER_DB_NAME }} \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                --server ${{ vars.INFRA_AZURE_SQLSERVER_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping SQL Database ${{ vars.INFRA_AZURE_SQLSERVER_DB_NAME }} ..."
              az sql db delete \
                  --name ${{ vars.INFRA_AZURE_SQLSERVER_DB_NAME }} \
                  --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --server ${{ vars.INFRA_AZURE_SQLSERVER_NAME }} \
                  --yes
          else
              echo "‚ö†Ô∏è SQL Database ${{ vars.INFRA_AZURE_SQLSERVER_DB_NAME }} does not exist. Skipping ..."
          fi

      - name: Drop SQL Server if exists
        run: |
          if az sql server show \
                --name ${{ vars.INFRA_AZURE_SQLSERVER_NAME }} \
                --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping SQL Server ${{ vars.INFRA_AZURE_SQLSERVER_NAME }} ..."
              az sql server delete \
                  --name ${{ vars.INFRA_AZURE_SQLSERVER_NAME }} \
                  --resource-group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --yes
          else
              echo "‚ö†Ô∏è SQL Server ${{ vars.INFRA_AZURE_SQLSERVER_NAME }} does not exist. Skipping ..."
          fi

      - name: Drop Resource Group if exists
        run: |
          if az group show \
                --name ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} &>/dev/null; then
              echo "üóëÔ∏è Dropping Resource Group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} ..."
              az group delete \
                  --name ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} \
                  --yes
          else
              echo "‚ö†Ô∏è Resource Group ${{ vars.INFRA_AZURE_RESOURCEGROUP_NAME }} does not exist. Skipping ..."
          fi
