name: WF07 - Deploy Main Agent to Azure

on:
  workflow_dispatch:

jobs:
  job-dummy:
    name: Prerequisites for Deploying Main Agent to Azure
    runs-on: ubuntu-latest
    steps:
      - name: Show pre requisites
        run: |
          echo "‚ö†Ô∏è Prerequisites:"
          echo ""
          echo "1.a Ir a https://ai.azure.com/resources"
          echo "1.b Dar clic en 'Create new'"
          echo ""
          echo "2.a. Seleccionar 'Azure AI Foundry resource'"
          echo "2.b. Dar clic en 'Next'"
          echo ""
          echo "3.a Nombrar al Project como '${{ vars.INFRA_AZURE_AIFOUNDRY_PROJECT_NAME }}'"
          echo "3.b Expandir 'Advanced options'"
          echo "3.c Nombrar al Azure AI Foundry resource como '${{ vars.INFRA_AZURE_AIFOUNDRY_RESOURCE_NAME }}'"
          echo "3.d Seleccionar la suscripci√≥n '${{ vars.INFRA_AZURE_SUBSCRIPTION_NAME }}'"
          echo "3.e Seleccionar el grupo de recursos '${{ vars.INFRA_AZURE_RESOURCE_GROUP_NAME }}'"
          echo "3.f Seleccionar la regi√≥n '${{ vars.INFRA_AZURE_REGION_NAME }}'"
          echo "3.g Dar clic en 'Create'"
          echo ""
          echo "4.a Esperar a que se cree el recurso (puede tardar varios minutos)"
          echo ""
          echo "5.a En el men√∫ lateral izquierdo, ubicar 'Build and customize' y luego dar clic en 'Agents'"
          echo "5.b Se debe abrir autom√°ticamente la pantalla 'Deploy a model'"
          echo "5.c Seleccionar el modelo '${{ vars.INFRA_AZURE_AIFOUNDRY_MODEL_NAME }}'"
          echo "5.d Dar clic en 'Confirm'"
          echo "5.e Nombrar el Deployment como '${{ vars.INFRA_AZURE_AIFOUNDRY_DEPLOYMENT_NAME }}'"
          echo "5.f Dar clic en 'Deploy'"
          echo ""
          echo "6.a Dar clic en el nombre del Agente creado. Tiene un nombre aleatorio"
          echo "6.b Nombrar el Agent name como '${{ vars.INFRA_AZURE_AIFOUNDRY_AGENT_NAME }}'"
          echo "6.c Dar clic en una zona en blanco de la pantalla para que se guarden los cambios"
          echo ""
          echo "7.a Tomar nota del valor de 'Agent ID'"

  job-configure-main-agent:
    name: Configure Main Agent instructions and tools
    runs-on: ubuntu-latest
    env:
      PROJECT_ENDPOINT: ${{ vars.INFRA_AZURE_AIFOUNDRY_RESOURCE_NAME }}.services.ai.azure.com/api/projects/${{ vars.INFRA_AZURE_AIFOUNDRY_PROJECT_NAME }}
      AGENT_NAME: ${{ vars.INFRA_AZURE_AIFOUNDRY_AGENT_NAME }}
    needs: job-dummy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.INFRA_AZURE_SERVICE_PRINCIPAL_INFO }}

      - name: Configure Main Agent instructions and tools
        run: |
          ACCESS_TOKEN=$(az account get-access-token \
            --resource https://ai.azure.com \
            --query accessToken -o tsv)

          echo "üîé Buscando agente con nombre: $AGENT_NAME"

          curl \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            https://$PROJECT_ENDPOINT/assistants?api-version=2025-05-01

          AGENT_ID=$(curl -s \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            https://$PROJECT_ENDPOINT/assistants?api-version=2025-05-01 \
            | jq -r --arg AGENT_NAME "$AGENT_NAME" '.data[] | select(.name==$AGENT_NAME) | .id')

          echo $AGENT_ID

          if [ -z "$AGENT_ID" ]; then
            echo "‚ùå No se encontr√≥ el agente con nombre $AGENT_NAME"
            exit 1
          fi

          echo "‚úÖ Agent ID encontrado: $AGENT_ID"
          echo "AGENT_ID=$AGENT_ID" >> $GITHUB_ENV
          
          echo "üõ†Ô∏è Configurando instrucciones y herramientas del agente principal..."

          # Escapar las instrucciones para JSON
          INSTRUCTIONS=$(cat ./main-agent/instructions/credits.txt | sed 's/"/\\"/g')      

          # Crear o actualizar el agente
          curl -s -X PUT "https://$PROJECT_ENDPOINT/assistants/$AGENT_ID?api-version=2025-05-01" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
                  \"name\": \"main-agent\",
                  \"instructions\": \"$INSTRUCTIONS\",
                  \"tools\": [
                    {
                      \"type\": \"openapi\",
                      \"openapi_spec\": $(cat ./backend/src/main/resources/openapi/openapi.json)
                    }
                  ]
                }" \
            | jq

          echo "‚úÖ Agente configurado correctamente"
